@model crudOpsPrac.Context.emp_table

@{ 
    ViewBag.Title = "Employee";
}
<style>
    .error {
    color: red;
     
    }
</style>
                                                                     
@using (Html.BeginForm("AddEmployee","Employee",FormMethod.Post))                /** AddEmplyee-> method, Empoyee is controller, FormMethod.Post it is post method */

{
    <div class="container">
        <div class="form-group">
            @Html.HiddenFor(x=> x.ID)
            <label> Name</label>
            @Html.ValidationMessageFor(x => x.empName,"",new   {@class = "error" }) 
            @Html.TextBoxFor(x => x.empName, new { @class = "form-control" })
        </div>

        <div class="form-group">
            <label> Father Name</label>
            @Html.ValidationMessageFor(x => x.empFname, "", new { @class = "error" })

            @Html.TextBoxFor(x => x.empFname, new { @class = "form-control" })
        </div>


        <div class="form-group">
            <label> Email Id</label>
            @Html.ValidationMessageFor(x => x.Email, "", new { @class = "error" })

            @Html.TextBoxFor(x => x.Email, new { @class = "form-control" })
        </div>


        <div class="form-group">
            <label>Phone Number </label>
            @Html.ValidationMessageFor(x => x.Mobile_Phone, "", new { @class = "error" })

            @Html.TextBoxFor(x => x.Mobile_Phone, new { @class = "form-control" })
        </div>

        <div class="form-group">
            <label> Description</label>
            @Html.ValidationMessageFor(x => x.Description, "", new { @class = "error" })

            @Html.TextAreaFor(x => x.Description, new { @class = "form-control", @rows = 10 })

        </div>
        <div class="form-group">
            <button type="submit" class="btn btn-primary">Submit</button>

            <button type="reset" class="btn btn-primary">Cancel</button>
        </div>
       
    </div>


}
